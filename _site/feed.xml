<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wilsonify</title>
    <description>Engineer</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 28 Mar 2017 21:08:34 -0500</pubDate>
    <lastBuildDate>Tue, 28 Mar 2017 21:08:34 -0500</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>Temperature Control</title>
        <description>Problem: stovetop temperature is poorly controlled resulting in inconsistent cooking times and results.

Solution: Use an Arduino to control the temperature of pan.

&lt;!--more--&gt;

![]({{site.baseurl}}/assets/images/thermocouple.jpg) 
I started by purchasing a k-type thermocouple from amazon (about $5). I also needed some female connections to connect to my circuit.

The thermo couple is composed of two wires, each a different alloy of chrome.

![]({{site.baseurl}}/assets/images/Thermocouple_circuit_Ktype_including_voltmeter_temperature.png)
Any temperature difference between the ends will create a current in the wire. I should be able to measure the current with my arduino and hopefully use that signal to control the temperature of my pan.

&amp;nbsp;

My plan is to control the temperature just below the smoke point of what every oil is being used.
![]({{site.baseurl}}/assets/images/smokepoint.png)

&amp;nbsp;
</description>
        <pubDate>Mon, 27 Mar 2017 07:02:00 -0500</pubDate>
        <link>http://localhost:4000/projects/2017/03/27/temperature-control.html</link>
        <guid isPermaLink="true">http://localhost:4000/projects/2017/03/27/temperature-control.html</guid>
        
        <category>cooking</category>
        
        <category>arduino</category>
        
        
        <category>projects</category>
        
      </item>
    
      <item>
        <title>Toilets</title>
        <description>I thought it would be fun to talk about toilets since we interact with them daily, yet, mostly ignore them and their operation.

![]({{site.baseurl}}/assets/images/Toilet-Flow-Diagram.png)
</description>
        <pubDate>Thu, 23 Mar 2017 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/howitworks/2017/03/23/toilets.html</link>
        <guid isPermaLink="true">http://localhost:4000/howitworks/2017/03/23/toilets.html</guid>
        
        <category>toilets</category>
        
        <category>diagrams</category>
        
        
        <category>howitworks</category>
        
      </item>
    
      <item>
        <title>3x3x3</title>
        <description>Here is my approach to solving a standard 3x3x3 Rubic's Cube. There's nothing new here. It's just how I learned about 12 years ago.

&lt;!--more--&gt;

I try to use as few algorithms as possible, but it is handy to be familiar with the
[notation](&quot;https://ruwix.com/the-rubiks-cube/notation/&quot;).

I add the word loop() when there is a step or combination that can be repeated indefinitely.

![]({{site.baseurl}}/assets/images/3x3x3-225x300.jpg)

# Fundamentals
- the cube is composed of 26 3-dimensional pieces. 8 corners, 12 Edges, 6 Centers. Stop thinking about each 2D colored square and start thinking in 3D.
- center pieces do not move, they define color of each side.

# Phase 1 - 1st corner
 	- place the 1st corner
 	- place 1st 2 edges
 	- place the 3rd edge
 	  - target 1 side
    - L U L'
# Phase 2 - 2nd corner
 	- place 2nd corner
 	- place 2 more edges
 	  - target 1 side
    - F' U2 F
    - L U L'

# Phase 3 - 2nd layer

## Edge Parity
- target 2 unpaired edges (these always occur in pairs)
  - U' R' U

##   Place next corner
- loop(R U)

##   place 2 more edges
- target 1 side
  - U R loop(U) R' U'
  - U2 R' loop(U) R U2

##   Place last corner of 2nd layer
- orient corner
  - loop(U R2 U' R)
- place
  - R' U' R U

##   Place last edge of 2nd layer
- U R U R loop(U) R' U' R' U'

# Phase 4 - Last Layer

##   permute 2 corners
- target 2 adjacent corners
  - left version:  R  U' L' | U  | R' U' L
  - right version: L' U  R  | U' | L  U  R'

##   Orient remaining corners
- target 1 corner 1st
  - R U R' U R U2 R'

##   permute last 3 edges
- clockwise version: B2 U  L' R | B2 | L R' U  B2
- counter clockwise: B2 U' L' R | B2 | L R' U' B2
</description>
        <pubDate>Tue, 21 Mar 2017 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/rubicscube/2017/03/21/3x3x3.html</link>
        <guid isPermaLink="true">http://localhost:4000/rubicscube/2017/03/21/3x3x3.html</guid>
        
        <category>puzzles</category>
        
        
        <category>rubicscube</category>
        
      </item>
    
  </channel>
</rss>
